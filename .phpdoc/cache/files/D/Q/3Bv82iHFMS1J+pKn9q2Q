1639615812
AwuilbDvXz%3A20147a2f18646279e82b28c63e780560-d0d565ad4c3f6083648a94e7e2db7d54
s:54872:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:57:"Incluimos todos los modelos que necesite este controlador";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"d0d565ad4c3f6083648a94e7e2db7d54";s:39:" phpDocumentor\Reflection\Php\File name";s:19:"IndexController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:33:"controladores/IndexController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:18685:"<?php

/**
 * Incluimos todos los modelos que necesite este controlador
 */
require_once MODELS_FOLDER . 'UserModel.php';

/**
 * Clase controlador de la página principal, que será la encargada de obtener, para cada tarea, los datos
 * necesarios de la base de datos, y posteriormente, tras su proceso de elaboración,
 * enviarlos a la vista para su visualización, en este caso para las tareas en relación con el registro y login de usuarios.
 */
class IndexController extends BaseController
{

    /**
     * Clase modelo (en ete caso UserModel) que utilizaremos para acceder a los datos y operaciones de la 
     * base de datos desde el controlador
     * @var UserModel Objeto de tipo UserModel
     */
    private $modelo;

    /**
     * $mensajes se utiliza para almacenar los mensajes generados en las tareas,
     * que serán posteriormente transmitidos a la vista para su visualización
     * @var array Array de mensajes
     */
    private $mensajes = [];

    /**
     * Constructor que crea automáticamente un objeto modelo en el controlador e
     * inicializa los mensajes a vacío
     */
    public function __construct()
    {
        parent::__construct();
        $this->modelo = new UserModel();
        $this->mensajes = [];
    }

    /**
     * Funcion que nos lleva a la página principal de la aplicación
     * @return void  No devuelve nada, pues simplemente devuelve la lista, pasándole los parámetros
     */
    public function index()
    {
        $parametros = [
            "tituloventana" => "Pagina principal",
        ];

        if (isset($_GET['fuera'])) { //Si hemos llegado aquí tras intentar acceder a una ventana sin permisos
            $this->mensajes[] = [
                "tipo" => "danger",
                "mensaje" => "No puedes acceder a otras páginas sin loguearte!! :(",
            ];
            $parametros["mensajes"] = $this->mensajes;
        } else { //Si no es el caso, y por ende hemos accedido aquí legalmente

            if (session_status() == PHP_SESSION_NONE) { //Abrimos una sesión en caso de ser necesario, para trabajar con dichas sesiones
                session_start();
            }

            if (isset($_COOKIE['mantener']) && !isset($_SESSION['logueado'])) { //Si está establecida la cookie de mantener pero no la de estar logueado
                //Por que hemos salido de la página desde otra ventana y hemos vuelto con la opción de mantenerla abierta
                header("Location: index.php?controller=home&accion=index"); //Nos dirigimos a la página de inicio del usuario
            } else if (isset($_SESSION['logueado'])) { //De lo contrario, eliminamos todas las sesiones y cookies
                unset($_SESSION['logueado']);
                unset($_SESSION['rol']);
                unset($_SESSION['id']);
                unset($_SESSION['hora']);

                if (isset($_COOKIE['mantener'])) {
                    unset($_COOKIE['mantener']);
                }
            }
        }
        // Incluimos la vista en la que visualizaremos los datos o un mensaje de error
        $this->view->show("Principal", $parametros);
    }

    /**
     * Funcion que se encargará del login de los usuarios en nuestra página
     * @return void  No devuelve nada, pues simplemente devuelve la lista, pasándole los parámetros
     */
    public function login()
    {

        $parametros = [
            "tituloventana" => "Página de login",
            "datos" => null,
            "mensajes" => [],
        ];

        if (isset($_POST['submit'])) { //Si hemos pulsado llegado aquí tras pulsar el botón de login

            if ((isset($_POST['usuario']) && isset($_POST['password'])) && (!empty($_POST['usuario']) && !empty($_POST['password']))) { //Si hemos introducido datos..

                $captcha = $_POST['g-recaptcha-response'];

                if ($captcha) {

                    $respuesta = file_get_contents("https://www.google.com/recaptcha/api/siteverify?secret=" . SECRET_KEY_CAPTCHA . "&response=$captcha");
                    $correcto = json_decode($respuesta, TRUE);

                    $datosSaneados = $this->modelo->sanearValores([ //Los saneamos
                        "usuario" => $_POST['usuario'],
                        "password" => $_POST['password'],
                    ]);

                    $usuarioSaneado = $datosSaneados['usuario']; //Utilizamos los datos saneados
                    $passwordSaneada = $datosSaneados['password'];

                    $resultModelo = $this->modelo->loginCorrecto($usuarioSaneado, $passwordSaneada); //Comprobamos que existe un usuario con esos datos

                    if ($resultModelo["correcto"] == 1) { //Si ese es el caso, iniciamos las sesiones y las cookies pertinentes

                        if ($correcto) {
                            session_start();
                            $_SESSION['logueado'] = $usuarioSaneado;
                            $_SESSION['rol'] = $resultModelo['datos']['rol_id'];
                            $_SESSION['id'] = $resultModelo['datos']['usuario_id'];
                            $_SESSION['hora'] = date("H:i:s");

                            if (isset($_POST['recordar']) && ($_POST['recordar'] == "on")) {
                                setcookie('usuario', $_POST['usuario'], time() + (15 * 24 * 60 * 60));
                                setcookie('password', $_POST['password'], time() + (15 * 24 * 60 * 60));
                                setcookie('recordar', $_POST['recordar'], time() + (15 * 24 * 60 * 60));
                            } else {
                                if (isset($_COOKIE['usuario'])) {
                                    setcookie('usuario', "");
                                }

                                if (isset($_COOKIE['password'])) {
                                    setcookie('password', "");
                                }

                                if (isset($_COOKIE['recordar'])) {
                                    setcookie('recordar', "");
                                }
                            }

                            if (isset($_POST['mantener']) && ($_POST['mantener'] == "on")) {
                                setcookie('mantener', $_POST['usuario'], time() + (15 * 24 * 60 * 60));
                            } else {
                                if (isset($_COOKIE['mantener'])) {
                                    setcookie('mantener', "");
                                }
                            }

                            $parametros["tituloventana"] = "Pagina de inicio";
                            $parametros["datos"] = $resultModelo["datos"];
                            $this->view->show("Inicio", $parametros); //Si  hemos introducido los datos correctos, mostramos la ventana de inicio del usuario

                        } else {
                            $this->mensajes[] = [
                                "tipo" => "danger",
                                "mensaje" => "El captcha no se ha validado correctamente!! :(",
                            ];
                            $parametros["mensajes"] = $this->mensajes;
                            $this->view->show("Login", $parametros);
                        }
                    } else { //Si no existe un usuario activo con esos datos, mostramos el error en cuesión

                        if ($resultModelo["correcto"] == 2) {
                            $this->mensajes[] = [
                                "tipo" => "danger",
                                "mensaje" => "El usuario no está activo!! :(",
                            ];
                        } else if ($resultModelo["correcto"] == 3) {
                            $this->mensajes[] = [
                                "tipo" => "danger",
                                "mensaje" => "Has introducido datos incorrectos!! :(",
                            ];
                        } else {
                            $this->mensajes[] = [
                                "tipo" => "danger",
                                "mensaje" => "El login no pudo realizarse correctamente!! :( {$resultModelo["error"]}",
                            ];
                        }

                        $parametros["mensajes"] = $this->mensajes;
                        $this->view->show("Login", $parametros); //Volvemos a mostrar la ventana de login, con los errores
                    }
                } else {
                    $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => "No has validado el captcha!! :(",
                    ];
                    $parametros["mensajes"] = $this->mensajes;
                    $this->view->show("Login", $parametros);
                }
            } else { //Si no hemos introducido todos los datos, mostramos igualmente la ventana de login, con los errores
                $this->mensajes[] = [
                    "tipo" => "danger",
                    "mensaje" => "Faltan datos por introducir!!",
                ];
                $parametros["mensajes"] = $this->mensajes;
                $this->view->show("Login", $parametros);
            }
        } else { //Si hemos venido a esta página por primera vez, mostramos la ventan de login
            $this->view->show("Login", $parametros);
        }
    }

    /**
     * Funcion que lleva a cabo el proceso del logueo a nuestra página mediante cuentas de google
     * @return void
     */
    public function loginGoogle()
    {
        include_once 'gpConfig.php'; //Incluimos el fichero con la configuración de google auth

        if (isset($_SESSION['token'])) {  //Si hemos recibido la sesión con el token con nuestra información..
            $gClient->setAccessToken($_SESSION['token']); //La guardamos en el objeto google_client creado
        }

        if ($gClient->getAccessToken()) { //Si podemos obtener el token del objeto creado..

            $gpUserProfile = $google_oauthV2->userinfo->get(); //Obtenemos nuestros datos de usuario

            $datosUsuGoogle = array( //Metemos ciertos datos de esos en un array para trabajar con ellos
                'autentificacion' => 'google', //Variable que indica el tipo de autentificación (google, facebook, etc.)
                'idgoogle' => $gpUserProfile['id'], //id de usuario de google
                'email' => $gpUserProfile['email'], //email de la cuenta de google
            );

            $datosUsuWeb = $this->modelo->loginGoogle($datosUsuGoogle); //Realizamos el logueo

            $_SESSION['logueado'] = $datosUsuWeb['datos']['usu_nombre']; //Establecemos las sesiones necesarias
            $_SESSION['rol'] = $datosUsuWeb['datos']['rol_id'];
            $_SESSION['id'] = $datosUsuWeb['datos']['usuario_id'];
            $_SESSION['hora'] = date("H:i:s");

            if ($datosUsuWeb['correcto']) {
                $parametros["tituloventana"] = "Pagina de inicio";
                $parametros["datos"] = $datosUsuWeb['datos'];

                $this->mensajes[] = [
                    "tipo" => "success",
                    "mensaje" => $datosUsuWeb['mensaje'],
                ];
                $this->view->show("Inicio", $parametros); //Si  hemos introducido los datos correctos, mostramos la ventana de inicio del usuario


            } else { //Si ha habido algún fallo en el registro, o en el acceso a google, nos devuelve a la ventana de login, con los mensajes de error
                $parametros["tituloventana"] = "Pagina de login";

                $this->mensajes[] = [
                    "tipo" => "danger",
                    "mensaje" => "No se ha podido realizar el registro!" . $datosUsuWeb['mensaje'],
                ];
                $this->view->show("Login", $parametros);
            }
        } else {

            $this->mensajes[] = [
                "tipo" => "danger",
                "mensaje" => "No se ha podido establecer la conexión con google!! :(",
            ];
            $parametros["mensajes"] = $this->mensajes;
            $this->view->show("Login", $parametros);
        }
    }

    /**
     * Funcion que se encargará del registro de los usuarios en nuestra página
     * @return void  No devuelve nada, pues simplemente devuelve la lista, pasándole los parámetros
     */
    public function register()
    {
        // Array asociativo que almacenará los mensajes de error que se generen por cada campo
        $errores = array();

        // Si se ha pulsado el botón de registro...
        if (isset($_POST) && !empty($_POST) && isset($_POST['submit'])) { // y hemos recibido las variables del formulario y éstas no están vacías...

            $nif = $_POST['txtnif']; //Guardamos los valores introducidos
            $nombre = $_POST['txtnombre'];
            $apellido1 = $_POST['txtapellido1'];
            $apellido2 = $_POST['txtapellido2'];
            $login = $_POST['txtlogin'];
            $email = $_POST['txtemail'];
            $password = $_POST['txtpass'];
            $telefono = $_POST['txttelefono'];
            $direccion = $_POST['txtdireccion'];

            $datosSaneados = $this->modelo->sanearValores([ //Saneamos los valores
                'nif' => $nif,
                'nombre' => $nombre,
                'apellido1' => $apellido1,
                'apellido2' => $apellido2,
                'login' => $login,
                "password" => $password,
                'email' => $email,
                'telefono' => $telefono,
                'direccion' => $direccion,
            ]);

            $errores = $this->modelo->comprobarRestricciones($datosSaneados); //Comprobamos que los datos introducidos cumplan con las restricciones

            /* Realizamos la carga de la imagen en el servidor */
            //       Comprobamos que el campo tmp_name tiene un valor asignado para asegurar que hemos
            //       recibido la imagen correctamente
            //       Definimos la variable $imagen que almacenará el nombre de imagen
            //       que almacenará la Base de Datos inicializada a NULL
            $imagen = null;

            if (isset($_FILES["imagen"]) && (!empty($_FILES["imagen"]["tmp_name"]))) {
                // Verificamos la carga de la imagen
                // Comprobamos si existe el directorio fotos, y si no, lo creamos
                if (!is_dir("assets/fotos")) {
                    $dir = mkdir("assets/fotos", 0777, true);
                } else {
                    $dir = true;
                }
                // Ya verificado que la carpeta uploads existe movemos el fichero seleccionado a dicha carpeta
                if ($dir) {
                    //Para asegurarnos que el nombre va a ser único...
                    $nombrefichimg = time() . "-" . $_FILES["imagen"]["name"];
                    // Movemos el fichero de la carpeta temportal a la nuestra
                    $movfichimg = move_uploaded_file($_FILES["imagen"]["tmp_name"], "assets/fotos/" . $nombrefichimg);
                    $imagen = $nombrefichimg;
                    // Verficamos que la carga se ha realizado correctamente
                    if (!$movfichimg) {

                        $this->mensajes[] = [
                            "tipo" => "danger",
                            "mensaje" => "Error: La imagen no se cargó correctamente! :(",
                        ];
                        $errores["imagen"] = "Error: La imagen no se cargó correctamente! :(";
                    }
                }
            }
            // Si no se han producido errores realizamos el registro del usuario
            if (count($errores) == 0) {
                $resultModelo = $this->modelo->adduser([ //LLamamos al Funcion para añadir el usuario, con los datos ya saneados
                    'nif' => $datosSaneados['nif'],
                    'nombre' => $datosSaneados['nombre'],
                    'apellido1' => $datosSaneados['apellido1'],
                    'apellido2' => $datosSaneados['apellido2'],
                    'login' => $datosSaneados['login'],
                    "password" => $datosSaneados['password'],
                    'email' => $datosSaneados['email'],
                    'telefono' => $datosSaneados['telefono'],
                    'direccion' => $datosSaneados['direccion'],
                    'imagen' => $imagen,
                    'rol_id' => 2,

                ]);
                if ($resultModelo["correcto"]) {
                    $this->mensajes[] = [
                        "tipo" => "success",
                        "mensaje" => "El usuarios se registró correctamente!! :)",
                    ];
                } else { //Si hemos tenido errores en el proceso de creación del ususario
                    $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => "El usuario no pudo registrarse!! :( <br />({$resultModelo["error"]})",
                    ];
                }
            } else { //Si hemos tenido errores previos en relación con las restricciones de valores
                foreach ($errores as &$error) {
                    $this->mensajes[] = [
                        "tipo" => "danger",
                        "mensaje" => $error,
                    ];
                }
            }
        }

        $parametros = [
            "tituloventana" => "Registro de usuarios",
            "datos" => [
                "txtnif" => isset($datosSaneados['nif']) ? $datosSaneados['nif'] : "",
                "txtnombre" => isset($datosSaneados['nombre']) ? $datosSaneados['nombre'] : "",
                "txtapellido1" => isset($datosSaneados['apellido1']) ? $datosSaneados['apellido1'] : "",
                "txtapellido2" => isset($datosSaneados['apellido2']) ? $datosSaneados['apellido2'] : "",
                "txtlogin" => isset($datosSaneados['login']) ? $datosSaneados['login'] : "",
                "txtpass" => isset($datosSaneados['password']) ? $datosSaneados['password'] : "",
                "txtemail" => isset($datosSaneados['email']) ? $datosSaneados['email'] : "",
                "imagen" => isset($imagen) ? $imagen : "",
                "txttelefono" => isset($datosSaneados['telefono']) ? $datosSaneados['telefono'] : "",
                "txtdireccion" => isset($datosSaneados['direccion']) ? $datosSaneados['direccion'] : "",
            ],
            "mensajes" => $this->mensajes,
        ];
        //Visualizamos la vista asociada al registro de usuarios
        $this->view->show("Registro", $parametros);
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:16:"\IndexController";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\IndexController";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"IndexController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:311:"Clase controlador de la página principal, que será la encargada de obtener, para cada tarea, los datos
necesarios de la base de datos, y posteriormente, tras su proceso de elaboración,
enviarlos a la vista para su visualización, en este caso para las tareas en relación con el registro y login de usuarios.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:8;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:15:"\BaseController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"BaseController";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:25:"\IndexController::$modelo";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\IndexController::$modelo";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"modelo";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:133:"Clase modelo (en ete caso UserModel) que utilizaremos para acceder a los datos y operaciones de la
base de datos desde el controlador";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:10:"\UserModel";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"UserModel";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:24:"Objeto de tipo UserModel";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:27:"\IndexController::$mensajes";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\IndexController::$mensajes";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"mensajes";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:146:"$mensajes se utiliza para almacenar los mensajes generados en las tareas,
que serán posteriormente transmitidos a la vista para su visualización";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:17:"Array de mensajes";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:23;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:28;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:5:{s:31:"\IndexController::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:107:"Constructor que crea automáticamente un objeto modelo en el controlador e
inicializa los mensajes a vacío";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\IndexController::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:34;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:25:"\IndexController::index()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:62:"Funcion que nos lleva a la página principal de la aplicación";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:80:"No devuelve nada, pues simplemente devuelve la lista, pasándole los parámetros";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:41;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\IndexController::index()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"index";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:45;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:25:"\IndexController::login()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:70:"Funcion que se encargará del login de los usuarios en nuestra página";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:80:"No devuelve nada, pues simplemente devuelve la lista, pasándole los parámetros";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:81;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\IndexController::login()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"login";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:85;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:31:"\IndexController::loginGoogle()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:91:"Funcion que lleva a cabo el proceso del logueo a nuestra página mediante cuentas de google";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:205;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\IndexController::loginGoogle()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"loginGoogle";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:209;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:28:"\IndexController::register()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:73:"Funcion que se encargará del registro de los usuarios en nuestra página";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:80:"No devuelve nada, pues simplemente devuelve la lista, pasándole los parámetros";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:265;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\IndexController::register()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"register";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:269;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:13;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";